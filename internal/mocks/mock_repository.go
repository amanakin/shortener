// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/amanakin/shortener/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockShortenerRepo is a mock of ShortenerRepo interface.
type MockShortenerRepo struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerRepoMockRecorder
}

// MockShortenerRepoMockRecorder is the mock recorder for MockShortenerRepo.
type MockShortenerRepoMockRecorder struct {
	mock *MockShortenerRepo
}

// NewMockShortenerRepo creates a new mock instance.
func NewMockShortenerRepo(ctrl *gomock.Controller) *MockShortenerRepo {
	mock := &MockShortenerRepo{ctrl: ctrl}
	mock.recorder = &MockShortenerRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenerRepo) EXPECT() *MockShortenerRepoMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockShortenerRepo) Close(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close", ctx)
}

// Close indicates an expected call of Close.
func (mr *MockShortenerRepoMockRecorder) Close(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockShortenerRepo)(nil).Close), ctx)
}

// Get mocks base method.
func (m *MockShortenerRepo) Get(ctx context.Context, shortened string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, shortened)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockShortenerRepoMockRecorder) Get(ctx, shortened interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockShortenerRepo)(nil).Get), ctx, shortened)
}

// Store mocks base method.
func (m *MockShortenerRepo) Store(ctx context.Context, link domain.Link) (domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", ctx, link)
	ret0, _ := ret[0].(domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Store indicates an expected call of Store.
func (mr *MockShortenerRepoMockRecorder) Store(ctx, link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockShortenerRepo)(nil).Store), ctx, link)
}
